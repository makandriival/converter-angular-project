{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ConverterComponent = /*#__PURE__*/(() => {\n  class ConverterComponent {\n    constructor() {\n      this.baseVal = 0;\n      this.exVal = 0;\n      this.baseCur = 'eur';\n      this.exCur = 'uah';\n      this.eurRate = Number(localStorage.getItem('eurSale'));\n      this.usdRate = Number(localStorage.getItem('usSale'));\n    }\n\n    getBaseVal(val) {\n      this.baseVal = Number(val), this.baseExchange();\n    }\n\n    getExValue(val) {\n      this.exVal = Number(val), this.exExchange();\n    }\n\n    curBase(val) {\n      this.baseCur = val, this.baseExchange();\n    }\n\n    curEx(val) {\n      this.exCur = val, this.baseExchange();\n    }\n\n    exExchange() {\n      this.baseCur === 'uah' ? this.uahConvertEx() : this.baseCur === 'eur' ? this.eurConvertEx() : this.baseCur === 'usd' ? this.usdConvertEx() : alert('something wrong!!');\n    }\n\n    uahConvertEx() {\n      this.exCur === 'uah' ? this.baseVal = this.exVal : this.exCur === 'eur' ? this.baseVal = this.exVal * this.eurRate : this.exCur === 'usd' ? this.baseVal = this.exVal * this.usdRate : alert('eur ex err');\n    }\n\n    eurConvertEx() {\n      this.exCur === 'uah' ? this.baseVal = this.exVal / this.eurRate : this.exCur === 'eur' ? this.baseVal = this.exVal : this.exCur === 'usd' ? this.baseVal = this.exVal * (this.eurRate / this.usdRate) : alert('eur ex err');\n    }\n\n    usdConvertEx() {\n      this.exCur === 'uah' ? this.baseVal = this.exVal / this.usdRate : this.exCur === 'usd' ? this.baseVal = this.exVal : this.exCur === 'eur' ? this.baseVal = this.exVal * (this.usdRate / this.eurRate) : alert('usd ex err');\n    }\n\n    baseExchange() {\n      this.baseCur === 'uah' ? this.uahConvertBase() : this.baseCur === 'eur' ? this.eurConvertBase() : this.baseCur === 'usd' ? this.usdConvertBase() : alert('something wrong!!');\n    }\n\n    uahConvertBase() {\n      this.exCur === 'uah' ? this.exVal = this.baseVal : this.exCur === 'eur' ? this.exVal = this.baseVal / this.eurRate : this.exCur === 'usd' ? this.exVal = this.baseVal / this.usdRate : alert('uah no luck!');\n    }\n\n    eurConvertBase() {\n      this.exCur === 'eur' ? this.exVal = this.baseVal : this.exCur === 'uah' ? this.exVal = this.baseVal * this.eurRate : this.exCur === 'usd' ? this.exVal = this.baseVal * (this.eurRate / this.usdRate) : alert('eur no luck!');\n    }\n\n    usdConvertBase() {\n      this.exCur === 'usd' ? this.exVal = this.baseVal : this.exCur === 'uah' ? this.exVal = this.baseVal * this.usdRate : this.exCur === 'eur' ? this.exVal = this.baseVal * (this.usdRate / this.eurRate) : alert('eur no luck!');\n    }\n\n    toNumber() {\n      this.baseVal.toFixed(2);\n      this.exVal.toFixed(2);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ConverterComponent.ɵfac = function ConverterComponent_Factory(t) {\n    return new (t || ConverterComponent)();\n  };\n\n  ConverterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConverterComponent,\n    selectors: [[\"app-converter\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"convert_conteiner\"], [\"for\", \"first\"], [\"type\", \"number\", \"id\", \"amount-base\", \"placeholder\", \"0\", 3, \"value\", \"keyup\"], [\"amBase\", \"\"], [\"name\", \"cur-select-base\", \"id\", \"cur-selector-base\", 3, \"change\"], [\"curSelBase\", \"\"], [\"value\", \"uah\"], [\"value\", \"usd\"], [\"value\", \"eur\", \"selected\", \"\"], [\"for\", \"second\"], [\"type\", \"number\", \"id\", \"amount-ex\", 3, \"value\", \"keyup\"], [\"amEx\", \"\"], [\"name\", \"cur-select-ex\", \"id\", \"cur-selector-ex\", 3, \"change\"], [\"curSelEx\", \"\"], [\"value\", \"uah\", \"selected\", \"\"], [\"value\", \"eur\"]],\n    template: function ConverterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Base curency \");\n        i0.ɵɵelementStart(3, \"input\", 2, 3);\n        i0.ɵɵlistener(\"keyup\", function ConverterComponent_Template_input_keyup_3_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return ctx.getBaseVal(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 4, 5);\n        i0.ɵɵlistener(\"change\", function ConverterComponent_Template_select_change_5_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r1 = i0.ɵɵreference(6);\n\n          return ctx.curBase(_r1.value);\n        });\n        i0.ɵɵelementStart(7, \"option\", 6);\n        i0.ɵɵtext(8, \"uah\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 7);\n        i0.ɵɵtext(10, \"usd\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 8);\n        i0.ɵɵtext(12, \"eur\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"label\", 9);\n        i0.ɵɵtext(14, \" Exchange curency \");\n        i0.ɵɵelementStart(15, \"input\", 10, 11);\n        i0.ɵɵlistener(\"keyup\", function ConverterComponent_Template_input_keyup_15_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r2 = i0.ɵɵreference(16);\n\n          return ctx.getExValue(_r2.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"select\", 12, 13);\n        i0.ɵɵlistener(\"change\", function ConverterComponent_Template_select_change_17_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r3 = i0.ɵɵreference(18);\n\n          return ctx.curEx(_r3.value);\n        });\n        i0.ɵɵelementStart(19, \"option\", 14);\n        i0.ɵɵtext(20, \"uah\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 7);\n        i0.ɵɵtext(22, \"usd\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 15);\n        i0.ɵɵtext(24, \"eur\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.baseVal);\n        i0.ɵɵadvance(12);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.exVal);\n      }\n    },\n    styles: [\".convert_conteiner[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;box-shadow:#0068d86f 0 20px 30px -10px;border-radius:1rem;background-color:#d7f8fa76;margin-bottom:3rem}label[_ngcontent-%COMP%]{margin:.7rem;display:grid;grid-gap:.3rem;gap:.3rem;max-width:1000px}\"]\n  });\n  return ConverterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}